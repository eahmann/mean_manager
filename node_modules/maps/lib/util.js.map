{"version":3,"sources":["../src/util.js"],"names":[],"mappings":";;;;;AAAO,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAG,CAAC;QAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;CAAA,CAAA;;AACrC,IAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAA;;;AAE3C,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,MAAM,EAAE,IAAI,EAAE,UAAU,EAAK;AACrD,WAAU,CAAC,QAAQ,GAAG,KAAK,CAAA;CAC3B,CAAA;;;AAEM,IAAM,qBAAqB,GAAG,SAAxB,qBAAqB,CAAI,CAAC,EAAE,kBAAkB,EAAK;;AAE/D,KAAM,CAAC,GAAG,CAAC,CAAC,WAAW,CAAA;AACvB,KAAI,CAAC,KAAK,SAAS,EAAE,OAAO,kBAAkB,CAAA;AAC9C,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,IAAI,SAAS,EAAA,CAAA;AACrC,KAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;AAC3B,KAAI,CAAC,IAAI,IAAI,EAAE,OAAO,kBAAkB,CAAA;;AAExC,QAAO,CAAC,CAAA;CACR,CAAA","file":"util.js","sourcesContent":["export const isObject = v => Object(v) === v\nexport const own = Object.prototype.hasOwnProperty\n\nexport const readonly = (target, name, descriptor) => {\n\tdescriptor.writable = false\n}\n\nexport const getSpeciesConstructor = (O, defaultConstructor) => {\n\t// assert(isObject(O))\n\tconst C = O.constructor\n\tif (C === undefined) return defaultConstructor\n\tif (!isObject(C)) throw new TypeError\n\tconst S = C[Symbol.species]\n\tif (S == null) return defaultConstructor\n\t// if (!isConstructor(S)) throw new TypeError\n\treturn S\n}\n"]}