{"version":3,"sources":["../src/ArrayMap.js"],"names":[],"mappings":"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","file":"ArrayMap.js","sourcesContent":["import MapBase from './MapBase'\nimport {getSpeciesConstructor} from './util'\n\nexport default class ArrayMap extends MapBase {\n\t_init() {\n\t\tthis._tri = []\n\t}\n\tclear() {\n\t\tthis._tri = []\n\t\tsuper.clear()\n\t}\n\thas(key) {\n\t\tif (super.has(key)) return true\n\t\tif (!Array.isArray(key)) return false\n\t\tlet node = this._tri[key.length]\n\t\tif (!node) return false\n\t\tfor (let i = 0; i < key.length; ++i) {\n\t\t\tnode = node.get(key[i])\n\t\t\tif (!node) return false\n\t\t}\n\t\treturn super.has(node)\n\t}\n\tget(key) {\n\t\tconst result = super.get(key)\n\t\tif (result !== undefined) return result\n\t\tif (super.has(key)) return undefined\n\t\tif (!Array.isArray(key)) return undefined\n\t\tlet node = this._tri[key.length]\n\t\tif (!node) return undefined\n\t\tfor (let i = 0; i < key.length; ++i) {\n\t\t\tnode = node.get(key[i])\n\t\t\tif (!node) return undefined\n\t\t}\n\t\treturn super.get(node)\n\t}\n\tset(key, value) {\n\t\tif (!Array.isArray(key)) return super.set(key, value)\n\t\tconst SC = getSpeciesConstructor(this, ArrayMap)\n\t\tlet node = this._tri[key.length], i = 0\n\t\tconst add = () => {\n\t\t\tconst n = key.length - 1\n\t\t\twhile (i < n) {\n\t\t\t\tconst newNode = new SC\n\t\t\t\tnode.set(key[i], newNode)\n\t\t\t\tnode = newNode\n\t\t\t\t++i\n\t\t\t}\n\t\t\tnode.set(key[n], key)\n\t\t\tnode = key\n\t\t}\n\t\tif (!node) {\n\t\t\tthis._tri[key.length] = node = new SC\n\t\t\tadd()\n\t\t} else {\n\t\t\twhile (i < key.length) {\n\t\t\t\tconst n = node.get(key[i])\n\t\t\t\tif (!n) {\n\t\t\t\t\tadd()\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tnode = n\n\t\t\t\t++i\n\t\t\t}\n\t\t}\n\t\treturn super.set(node, value)\n\t}\n\tdelete(key) {\n\t\tif (!Array.isArray(key)) return super.delete(key)\n\t\tconst refs = []\n\t\tlet node = this._tri[key.length]\n\t\tif (!node) return false\n\t\tfor (let i = 0; i < key.length; ++i) {\n\t\t\tconst k = key[i]\n\t\t\trefs.push([node, k])\n\t\t\tnode = node.get(k)\n\t\t\tif (!node) return false\n\t\t}\n\t\tconst result = super.delete(node)\n\t\twhile (refs.length > 0) {\n\t\t\tconst [node, key] = refs.pop()\n\t\t\tnode.delete(key)\n\t\t\tif (node.size > 0) break\n\t\t}\n\t\treturn result\n\t}\n}\n"]}